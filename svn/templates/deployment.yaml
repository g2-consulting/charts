apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "svn.fullname" . }}
  labels:
    app: {{ template "svn.name" . }}
    chart: {{ template "svn.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "svn.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "svn.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: git-sync
        image: k8s.gcr.io/git-sync:v2.0.4
        imagePullPolicy: Always
        volumeMounts:
        - name: svn-config
          mountPath: /git
        env:
        - name: GIT_SYNC_REPO
          value: {{ .Values.gitsync.repo }}
        - name: GIT_SYNC_DEST
          value: config
        - name: GIT_SYNC_USERNAME
          valueFrom:
            secretKeyRef:
              name: sync-secret
              key: user
        - name: GIT_SYNC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sync-secret
              key: password
        securityContext:
          runAsUser: 0

      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: {{ .Chart.Name }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.authentication.ldap.enabled }}
        env:
          - name: app
            value: {{ template "svn.name" . }}
          - name: ldap_host
            value: {{ .Values.authentication.ldap.ldap_host | quote }}
          - name: ldap_bind_dn
            value: {{ .Values.authentication.ldap.ldap_bind_dn | quote }}
          - name: ldap_bind_pass
            value: {{ .Values.authentication.ldap.ldap_bind_pass | quote }}
          - name: ldap_uri
            value: {{ .Values.authentication.ldap.ldap_uri | quote }}
{{ end }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: http
        volumeMounts:
        - name: svn-config
          mountPath: /svn-config
        - name: svn-data
          mountPath: /svn
      volumes:
      - name: svn-config
        emptyDir: {}
        {{ if .Values.persistence.persistentVolumeClaim.enabled }}
      - name: svn-data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.persistentVolumeClaim.name }}
        {{ else }}
      - name: svn-data
        emptyDir: {}
        {{ end }}

      resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
